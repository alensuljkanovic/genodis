/*
    Description of model.
*/

Model:
    'model' name=ID '{'
        classes+=Class
        actions*=Action
        bindings*=Binding
    '}'
;

Class:
    'class' name=ID '{'
        // shows if class should be persisted
        (session="session")?
        properties+=Property
        actions*=Action
        bindings*=Binding
    '}'
;

// TODO: Add label.
Property:
    name=ID ':' type=[PropertyType] (list="list")? ('(' arguments*=PropertyArgument[','] ')')?
;

PropertyType:
    "string" | "text" | "int" | "float" | "decimal"| "datetime" | "date" | "combo" | Class
;

PropertyArgument:
    name=ID ('=' value=BASETYPE)?
;

Action:
    '#' name=ID '(' expression=ActionExpression ')'
;

// FIXME: Rules below should be reimplemented.
ActionExpression:
    first_operand=First operator=ActionOperator second_operand=Expression
;

First:
    "this" | ID
;

Second:
    BASETYPE | ID | Expression
;

Expression:
    ExpressionFirstPart | ID
;

ExpressionFirstPart:
    first_operand=ComplexName rest*=ExpressionRest
;

ComplexName:
    /*[Class] '.' ID | [Class] '.' 'object' '.' ID | ID '.' 'object' '.' ID*/
    name=ID ('.' ID)*
;

ExpressionRest:
    operator=ExpressionOperator name=ComplexName
;

ExpressionSecondPart:
    operator=ExpressionOperator second_operand=ComplexName
;

ActionOperator:
    "-> add" | "-> del" | "->" | "="
;

ExpressionOperator:
     "+=" | "-=" | "*=" | "/="| "*" | "/" | "+" | "-"
;

// TODO: See if I really need binding as a special rule. In the end, it's just
// a special type of Action.
Binding:
    '#bind' '(' parameters*=BindingParameters[','] ')' '{'
        code=BindingCode
    '}'
;

BindingParameters:
    name=ID ('.' ID)*
;

BindingCode:
    /^(.|\n)*?(?=})/
;
